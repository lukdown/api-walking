<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ksb">


	<!-- 회원 정보 가져오기 -->
	<select id="selectMemberInfo" resultType="KsbVo" parameterType="int">
		<![CDATA[
			select  users_no,
					users_id,
					users_pw,
					users_name,
					users_nickname,
					users_hp,
					users_birth_date,
					users_gender,
					users_residence,
					users_filePath as 'filePath',
					users_orgName as 'orgName',
					users_saveName as 'saveName',
					users_fileSize as 'fileSize',
					users_login_type
			from users_list
			where users_no = #{no}
		]]>
	</select>

	<!-- 프로필 사진 업데이트 -->
	<update id="profileUpdate" parameterType="ksbVo">
		<![CDATA[
			update users_list
			set users_saveName = #{saveName},
				users_orgName = #{orgName},
			    users_fileSize = #{fileSize},
			    users_filePath = #{filePath}
			where users_no = #{users_no}
		]]>
	</update>


	<!-- 기록 리스트 가져오기 -->
	<select id="recordList" parameterType="int" resultType="KsbVo">
		<![CDATA[
			select  record_no,
					users_no,
			        course_no,
			        record_date,
			        record_time,
			        record_length,
			        record_kcal,
			        record_vibe,
			        record_memo
			from record
			where users_no = #{no}
			order by record_date
		]]>

	</select>

	<!-- 달력 리스트 가져오기 -->
	<select id="calendarList" parameterType="int" resultType="KsbVo">
		<![CDATA[
			select  record_no,
					users_no,
			        course_no,
			        record_date,
			        record_time,
			        record_length,
			        record_kcal,
			        record_vibe,
			        record_memo
			from record
			where users_no = #{no}
		]]>
	</select>


	<!-- 코스 포인트 가져오기 -->
	<select id="coursepointList" parameterType="ksbVo" resultType="KsbVo">
		<![CDATA[
			SELECT course_point_no, course_no, course_latitude, course_longitude, course_order, course_division,
			       @group_num := IF(@last_val = 0 AND course_order != 0, @group_num + 1, @group_num) AS group_num,
			       @last_val := course_order
			FROM (
			    SELECT course_point_no, course_no, course_latitude, course_longitude, course_order, course_division
			    FROM course_point
			    ORDER BY course_point_no
			) AS sorted_numbers
			where course_no = #{course_no}
			
		]]>
	</select>

	<!-- 기록 포인트 가져오기 -->
	<select id="recordpointList" parameterType="ksbVo" resultType="KsbVo">
		<![CDATA[
			SELECT record_point_no, record_no, record_latitude, record_longitude, record_order, record_division,
			       @group_num := IF(@last_val = 0 AND record_order != 0, @group_num + 1, @group_num) AS group_num,
			       @last_val := record_order
			FROM (
			    SELECT record_point_no, record_no, record_latitude, record_longitude, record_order, record_division
			    FROM record_point
			    ORDER BY record_point_no
			) AS sorted_numbers
			where record_no = #{record_no}  
		
		
		]]>

	</select>

	<!-- 기록 1개만 가져오기 -->

	<select id="selectRecord" parameterType="ksbVo" resultType="KsbVo">
		<![CDATA[
			select  record_no,
					users_no,
			        course_no,
			        record_date,
			        record_time,
			        record_length,
			        record_kcal,
			        record_vibe,
			        record_memo
			from record
			where record_no = #{record_no} and course_no = #{course_no}
		
		]]>
	</select>

	<!-- 스티커 리스트 가져오기 -->
	<select id="stickerList" parameterType="int" resultType="KsbVo">
		<![CDATA[
			SELECT  cg.challenge_no,
        			cg.challenge_name,
			        cg.filePath,
			        cg.orgName,
			        cg.saveName,
			        cg.fileSize,
			        cg.challenge_explanation,
			        cp.person_no,
			        cp.login_users_no,
        			CASE 
            		WHEN cp.login_users_no IS NOT NULL THEN 1 
            		ELSE 0 
        			END AS is_challenge_t_f
		FROM challenge cg
		LEFT JOIN (
    	SELECT  person_no,
           		challenge_no,
           		users_no AS 'login_users_no'
    	FROM challenge_person
    	WHERE users_no = #{no}
		) cp 
		ON cp.challenge_no = cg.challenge_no
		WHERE cp.login_users_no IS NOT NULL
		
		]]>
	</select>

	<!-- 스티커 바꾸기 -->
	<update id="ChallengeUpdate" parameterType="int">
		<![CDATA[
			update challenge_person
			set challenge_daepyo = 1
			where users_no = #{users_no}
            and challenge_no = #{challenge_no}
		]]>
	</update>

	<!-- 소모임 리스트 가져오기 -->
	<select id="gatheringList" resultType="KsbVo">
		<![CDATA[
			select  gl.small_gathering_no,
					gl.users_no,
			        gl.course_no,
			        cl.course_no,
			        cl.course_name,
			        gl.small_gathering_name,
			        gl.small_gathering_host_name,
			        gl.small_gathering_hp,
			        gl.small_gathering_total_personnel,
			        gl.small_gathering_date,
			        gl.small_gathering_deadline,
			        gl.small_gathering_region,
			        gl.small_gathering_saveName
			from small_gathering_list gl
				LEFT JOIN ( SELECT 	course_no,
									course_name
	  				FROM course_list
                  					) cl
				ON gl.course_no = cl.course_no
			order by gl.small_gathering_no desc
		]]>
	</select>

	<!-- 총 걸음 수 구하기 -->
	<select id="totalLength" parameterType="int" resultType="double">
		SELECT SUM(record_length) / 1000 AS total_length_km
		FROM record
		WHERE users_no = #{no}

	</select>

	<!-- 소모임 리스트 가져오기 -->
	<select id="selectlist" parameterType="map" resultType="KsbVo">
		<![CDATA[
			select  gl.small_gathering_no,
					gl.users_no,
			        gl.course_no,
			        cl.course_no,
			        cl.course_name,
			        gl.small_gathering_name,
			        gl.small_gathering_host_name,
			        gl.small_gathering_hp,
			        gl.small_gathering_total_personnel,
			        gl.small_gathering_date,
			        gl.small_gathering_deadline,
			        gl.small_gathering_region,
			        gl.small_gathering_saveName
			from small_gathering_list gl
				LEFT JOIN ( SELECT 	course_no,
									course_name
	  				FROM course_list
                  					) cl
				ON gl.course_no = cl.course_no
			
		]]>
		<if test="keyword != null">
			<![CDATA[
				where (small_gathering_region like concat('%',#{keyword},'%'))
			]]>
		</if>	
		
		<![CDATA[			
		order by gl.small_gathering_no desc	 
			limit #{startRowNo}, #{listCnt}
		]]>
		
	</select>

	<!-- 소모임 리스트 전체 글갯수 -->
	<select id="selectTotalCnt" parameterType="string" resultType="int">
		<![CDATA[
			select count(*) as count
			from small_gathering_list
		]]>
		<if test="keyword != null and keyword != ''">
		<![CDATA[
			where small_gathering_region like concat('%', #{keyword}, '%')
		]]>
		</if>
	</select>
	
	<!-- 코스 리스트 가져오기 -->
	<select id="courseList" resultType="KsbVo">
		<![CDATA[
			select  course_no,
					course_name
			from course_list
		]]>
	</select>
	
	<!-- 소모임 등록하기 -->
	<select id="addGathering" parameterType="KsbVo">
		<![CDATA[
			insert into small_gathering_list
			values(null, #{users_no}, #{course_no}, #{small_gathering_name}, #{small_gathering_host_name}, #{small_gathering_hp}, 
				  #{small_gathering_total_personnel}, #{small_gathering_date}, #{small_gathering_deadline}, #{small_gathering_information}, #{small_gathering_region}, 
				  #{small_gathering_gender_limit}, #{small_gathering_age_limit}, #{small_gathering_filePath}, #{small_gathering_orgName}, 
				  #{small_gathering_saveName}, #{small_gathering_listcol} )
		]]>
	</select>
	
	<!-- 소모임 1개 가져오기 -->
	<select id="selectGathering" parameterType="int" resultType="KsbVo">
		<![CDATA[
			select  small_gathering_no,
					users_no,
			        course_no,
			        small_gathering_name,
			        small_gathering_host_name,
			        small_gathering_hp,
			        small_gathering_total_personnel,
			        small_gathering_date,
			        small_gathering_deadline,
			        small_gathering_information,
			        small_gathering_region,
			        small_gathering_gender_limit,
			        small_gathering_age_limit,
			        small_gathering_saveName
			from small_gathering_list
			where small_gathering_no = #{small_gathering_no}
		
		]]>
	</select>
	
	<!-- 소모임 수정하기 -->
	<select id="gatheringModify" parameterType="KsbVo">
		<![CDATA[
			UPDATE small_gathering_list
			SET 
			    users_no = #{users_no},
			    course_no = #{course_no},
			    small_gathering_name = #{small_gathering_name},
			    small_gathering_host_name = #{small_gathering_host_name},
			    small_gathering_hp = #{small_gathering_hp},
			    small_gathering_total_personnel = #{small_gathering_total_personnel},
			    small_gathering_date = #{small_gathering_date},
			    small_gathering_deadline = #{small_gathering_deadline},
			    small_gathering_information = #{small_gathering_information},
			    small_gathering_region = #{small_gathering_region},
			    small_gathering_gender_limit = #{small_gathering_gender_limit},
			    small_gathering_age_limit = #{small_gathering_age_limit},
			    small_gathering_filePath = #{small_gathering_filePath},
			    small_gathering_orgName = #{small_gathering_orgName},
			    small_gathering_saveName = #{small_gathering_saveName},
			    small_gathering_listcol = #{small_gathering_listcol}
			WHERE 
			    small_gathering_no = #{small_gathering_no}
		
		]]>
	</select>
	
	<!-- 대표 도전과제 이름 가져오기 -->
	<select id="getChallengeDaepyo" parameterType="int" resultType="KsbVo">
		<![CDATA[
			SELECT 
				    c.challenge_name,
				    c.saveName
			FROM 
			    challenge c
			INNER JOIN challenge_person cp ON c.challenge_no = cp.challenge_no
			WHERE 
			    cp.users_no = #{users_no}
			    AND cp.challenge_daepyo = 1			
		]]>
	</select>
	
	
	
</mapper>